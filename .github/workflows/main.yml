name: Build and Deploy
on:
  workflow_dispatch:
  push:
    branches:
      - master
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.1 # If you're using actions/checkout@v2 you must set persist-credentials to false in most cases for the deployment to work correctly.
        with:
          persist-credentials: false

      - name: Set up Node.js 12.x
        uses: actions/setup-node@v1
        with:
          node-version: 12
          registry-url: https://registry.npmjs.org/

      - name: Get Version ID
        id: get-version-id
        run: |
          VERSION_ID=$(cat package.json | grep version | sed 's|  \"version\": \"||g' | sed 's|\",||g')
          echo "::set-output name=version-id::$(echo $VERSION_ID)"
          echo $VERSION_ID

      - name: Install and Build 🔧 # This example project is built using npm and outputs the result to the 'build' folder. Replace with the commands required to build your project, or remove this step entirely if your site is pre-built.
        env:
          VERSION_ID: ${{ steps.get-version-id.outputs.version-id }}
        run: |
          sed -i "s|publicPath: '/'|publicPath: '//cdn.jsdelivr.net/gh/Dup4/Dup4.github.io@${{ env.VERSION_ID }}/'|" config.ts
          sed -i "s|favicon: '/favicon.png'|favicon: '//cdn.jsdelivr.net/gh/Dup4/Dup4.github.io@${{ env.VERSION_ID }}/favicon.png'|" config.ts 
          sed -i "s|baidu: ''|baidu: '${{ secrets.BAIDU_ANALYTICS_ID }}'|" config.ts 
          npm install
          npm run build

      - name: Minify HTML
        uses: Dup4/minify-html-action@v4
        with:
          src: './dist/index.html'

      - name: Release 
        uses: JamesIves/github-pages-deploy-action@3.6.2
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRANCH: gh-pages # The branch the action should deploy to.
          FOLDER: dist # The folder the action should deploy.
          CLEAN: true # Automatically remove deleted files from the deploy branch

      - name: Create Release # 创建Release，可以在仓库看到一个个版本
        id: create_release
        uses: actions/create-release@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
          VERSION_ID: ${{ steps.get-version-id.outputs.version-id }}
        with:
          commitish: gh-pages
          tag_name: ${{ env.VERSION_ID }}
          release_name: Release ${{ env.VERSION_ID }}
          draft: false # 是否是草稿
          prerelease: false # 是否是预发布

      - name: Deploy
        uses: appleboy/ssh-action@master # 使用ssh链接服务器
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: | # 执行命令（运行到服务器）cd：要确保服务器有这个目录； wget：下载上一步的release到服务器； tar：解压； 安装依赖；启动服务
            cd /var/www/Dup4.github.io
            git checkout gh-pages
            git pull
